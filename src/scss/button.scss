@import './variable.scss';

$typeArr: (filled, border, gradient);

$color: (
  primary: ($--color-primary, $--color-primary-light-9),
  success: ($--color-success, $--color-success-light-9),
  danger: ($--color-danger, $--color-danger-light-9),
  warning: ($--color-warning, $--color-warning-light-9),
  dark: ($--color-dark, $--color-dark-light-9),
);

$size: (
  large: (/*p-y*/14px, /*p-x*/35px, /*radius*/6px, /*font-size*/17.5px),
  normal: (/*p-y*/10.5px, /*p-x*/28px, /*radius*/5px, /*font-size*/14px),
  small: (/*p-y*/7px, /*p-x*/21px, /*radius*/4px, /*font-size*/12px)
);

@mixin button-common-style {
  display: inline-block;
  cursor: pointer;
  user-select: none;
}

@each $type in $typeArr {
  @each $sizeKey, $sizeValue in $size {
    @each $colorKey, $colorValue in $color {
      // filled
      @if $type == filled {
        .lxt-button__filled__#{ $colorKey }__#{ $sizeKey } {
          @include button-common-style;
          font-size: nth($sizeValue, 4);
          padding: nth($sizeValue, 1) nth($sizeValue, 2);
          border-radius: nth($sizeValue, 3);
          background-color: nth($colorValue, 1);
          color: white;
          &:hover {
            box-shadow: 0px 5px 10px nth($colorValue, 1);
          }
        }
      }

      // border
      @if $type == border {
        .lxt-button__border__#{ $colorKey }__#{ $sizeKey } {
          @include button-common-style;
          font-size: nth($sizeValue, 4);
          padding: nth($sizeValue, 1) nth($sizeValue, 2);
          border-radius: nth($sizeValue, 3);
          color: nth($colorValue, 1);
          border: 1px solid nth($colorValue, 1);
          box-sizing: border-box;
          &:hover {
            background-color: nth($colorValue, 2);
          }
        }
      }

      // gradient
      @if $type == gradient {
        .lxt-button__gradient__#{ $colorKey }__#{ $sizeKey } {
          @include button-common-style;
          font-size: nth($sizeValue, 4);
          padding: nth($sizeValue, 1) nth($sizeValue, 2);
          border-radius: nth($sizeValue, 3);
          background: linear-gradient(to right top, nth($colorValue, 1), 80%, nth($colorValue, 2));
          color: white;
          &:hover {
            transform: translateY(-3px);
          }
        }
      }
    }
  }
}

// lxt-button__filled__primary__normal